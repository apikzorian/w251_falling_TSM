# We run an ubuntu arm64v8-based
FROM w251/pytorch:jup-tx2-4.3_b132

######### Step 0
######### Setup
# base URL for NVIDIA libs
ARG URL=http://169.44.201.108:7002/jetpacks/4.2
ARG DEBIAN_FRONTEND=noninteractive
WORKDIR /

# Install drivers first
RUN apt-get update
RUN apt-get install -y software-properties-common
RUN apt-get update && apt-get install -y \
    curl \
    git \
    python3.6 \
    python3-pip \
    python-opencv \
    python3-opencv \
    vim \
    unzip \
    cmake


######### Step 1 
######### Install opencv 4
RUN mkdir /my_opencv
COPY opencvinstall_script.sh  /my_opencv
RUN /my_opencv/opencvinstall_script.sh

######### Step 2
######### Set python

RUN export PYTHONPATH=/usr/bin/python3


######### Step 3
######### Build TVM
RUN mkdir /my_files
COPY config_mod.cmake /my_files
RUN  apt install -y --force-yes llvm
RUN git clone https://github.com/apache/incubator-tvm.git
WORKDIR incubator-tvm
RUN pwd
RUN git submodule update --init
RUN mkdir build
WORKDIR build
RUN cp ../../my_files/config_mod.cmake config.cmake
RUN cmake ..
RUN make -j4
WORKDIR ..
RUN cd python; sudo python3 setup.py install; cd ..
RUN cd topi/python; sudo python3 setup.py install; cd ../../../



######### Step 4
######### Install ONNX
RUN sudo apt-get install  -y --force-yes protobuf-compiler libprotoc-dev
RUN pip3 install onnx




######### Step 5
######### export cuda toolkit binary to path
#RUN export PATH=$PATH:/usr/local/cuda/bin
